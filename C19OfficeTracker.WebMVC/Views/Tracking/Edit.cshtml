@model C19OfficeTracker.Models.TrackingEdit
<h1><label>Current Date : @DateTime.Now.ToString()</label><br />  </h1>
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Tracking Edit</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.TrackingId)

    <div class="form-group">
        @Html.LabelFor(model => model.EmpId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EmpId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TrackDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TrackDate, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TrackDate, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.SymptomAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.SymptomAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.SymptomAnswer, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.ContactAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ContactAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ContactAnswer, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.TempAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TempAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TempAnswer, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.Temperature, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Temperature, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Temperature, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.MaskAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MaskAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MaskAnswer, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group">
        @Html.LabelFor(model => model.GroupAnswer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.GroupAnswer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.GroupAnswer, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr />
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
